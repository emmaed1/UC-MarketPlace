generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  name              String
  email             String    @unique
  password          String
  messagesReceived  Message[] @relation("ReceivedMessages")
  messagesSent      Message[] @relation("SentMessages")
  friends           User[]    @relation("UserFriends")
  friendOf          User[]    @relation("UserFriends")
  favoriteFriends   User[]    @relation("UserFavorites")
  favoritedBy       User[]    @relation("UserFavorites")
  products          Product[] @relation("UserProducts")
  services          Service[] @relation("UserServices")
}

model Product {
  productId  Int               @id @default(autoincrement())
  name       String            @db.VarChar(255)
  desc       String
  price      Float
  quantity   Int
  rating     Float?
  img        String?
  status     String?           @default("available")
  categories ProductCategory[] @relation("ProductToProductCategory")
  userId     Int?
  user       User?             @relation("UserProducts", fields: [userId], references: [id])
}

model ProductCategory {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[] @relation("ProductToProductCategory")
}

model Service {
  serviceId  Int               @id @default(autoincrement())
  name       String
  desc       String
  price      Float
  quantity   Int
  rating     Float?
  img        String?
  categories ServiceCategory[] @relation("ServiceToServiceCategory")
  userId     Int?
  user       User?             @relation("UserServices", fields: [userId], references: [id])
  availability Json?  
}

model ServiceCategory {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  services Service[] @relation("ServiceToServiceCategory")
}

model Message {
  id          Int      @id @default(autoincrement())
  senderId    Int
  recipientId Int
  message    String
  timestamp  DateTime @default(now())
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  recipient  User     @relation("ReceivedMessages", fields: [recipientId], references: [id])
}